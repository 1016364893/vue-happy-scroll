{"version":3,"file":"happy-scroll.min.js","sources":["../src/util.js","../src/strip.vue","../src/scroll.vue","../src/index.js"],"sourcesContent":["/**\n * 绑定事件\n *\n * @export\n * @param {any} dom\n * @param {any} eventType\n * @param {any} callback\n */\nexport function on(dom, eventType, callback){\n  if(document.addEventListener){\n      dom.addEventListener(eventType, callback);\n  }else{\n      dom.attachEvent('on' + eventType, callback);\n  }\n}\n\n/**\n* 解绑事件\n*\n* @export\n* @param {any} dom\n* @param {any} eventType\n* @param {any} callback\n*/\nexport function off(dom, eventType, callback){\n  if(document.addEventListener){\n      dom.removeEventListener(eventType, callback);\n  }else{\n      dom.detachEvent('on' + eventType, callback);\n  }\n}\n\n/**\n * 节流函数生成器\n * 对于调用频繁的地方，可保障在设置时间内只执行1次。\n * 使用方法:\n *\n * const currentThrottle = generateThrottle() //生成一个节流函数\n * currentThrottle(Data.now()) //如果超过了阈值则返回true，否则返回false\n *\n * @param throttleTime 设置此生成器的阈值\n */\nexport const generateThrottle = function (throttleTime) {\n  let time = Date.now();\n  return function (now) {\n    //如果没有设置节流时间， 使用默认配置的时间 14毫秒\n    if (now - time > (throttleTime || 14)) {\n      time = now;\n      return true;\n    }\n  }\n}\n","<template>\n  <div ref=\"stripContainer\"\n       class=\"happy-scroll-strip\"\n       :style=\"[initLocation]\"\n       :class=\"[horizontal ? 'happy-scroll-strip--horizontal' : 'happy-scroll-strip--vertical']\"\n       @wheel.capture.stop=\"handlerWheel\">\n\n    <div ref=\"strip\"\n      class=\"scrollBar\"\n      :style=\"[translate, initStrip, initSize, {background: color}]\"\n      @mousedown.stop=\"handlerMouseDown\">\n    </div>\n  </div>\n</template>\n<script>\nimport { on, off, generateThrottle } from './util'\nexport default {\n  name: 'happy-scroll-strip',\n  props: {\n    //是否作为横向\n    horizontal: Boolean,\n    //使竖向滚动条在居左\n    left: Boolean,\n    //使横向滚动条居右\n    top: Boolean,\n    percentage: {\n      type: Number,\n      required: true\n    },\n    move: {\n      type: Number,\n      default: 0\n    },\n    //滚动条的宽(对于横向时为高度)\n    size: {\n      type: [Number, String],\n      default: 4\n    },\n    //滚动条的背景色\n    color: {\n      type: String,\n      default: 'rgba(51,51,51,0.2)'\n    },\n    //鼠标移动的节流函数时间, 表示该时间内鼠标移动的回调保障在该时间内只执行一次\n    throttle: {\n      type: Number,\n      default: 14 //默认14毫秒\n    }\n  },\n  data() {\n    return {\n      config: {},\n      //标记鼠标按下后开始移动的状态. 鼠标按下为true 抬起为 false\n      startMove: false,\n      //为document绑定事件, 此状态值为了避免重复绑定\n      binded: false,\n      //滚动条的宽或者高\n      length: 0,\n      //鼠标移动的节流函数\n      moveThrottle: generateThrottle(this.throttle)\n    }\n  },\n  computed: {\n    //初始化宽度(横向时为高度)\n    initSize () {\n      return {\n        [this.horizontal ? 'height' : 'width'] : this.size + 'px'\n      }\n    },\n    /**\n     * 初始化滚动条的长度, 这个方法会被执行两次。\n     */\n    initStrip() {\n      const container = this.$refs.stripContainer, //滚动条的容器\n        strip = this.$refs.strip   //滚动条本身\n      if (!this.percentage && !container) {\n        return\n      }\n      //滚动条的高度或宽度 = 滚动条容器(100%高) * 百分比(外层内容与容器的比例)\n      const number = container[this.config.client] * this.percentage\n      this.length = number\n      //根据 水平还是垂直方向 决定初始化滚动条的 宽还是高\n      return {\n        [this.config.sizeAttr]: `${number}px`\n      }\n    },\n    /**\n     * 变化滚动条的位置，scroll主体内容，滚动时，滚动条跟着联动\n     */\n    translate() {\n      let offset = this.move * this.percentage\n\n      if(!this.$refs.stripContainer)  return\n\n      const rect = this.$refs.stripContainer.getBoundingClientRect(),\n            maxOffset = rect[this.config.sizeAttr] - this.length\n      if(offset < 0){\n        offset = 0\n      }\n      if(offset > maxOffset){\n        offset = maxOffset\n      }\n      return {\n        transform: `${this.config.translate}(${offset}px)`\n      }\n    },\n    //初始化滚动条位置\n    initLocation(){\n      if(this.horizontal){\n        return this.top ? { top: 0, bottom: 'auto' } : ''\n      }\n      return this.left ? { left: 0, right: 'auto'} : ''\n    }\n  },\n  methods: {\n    bindEvents() {\n      //已绑定过了 不再重复绑定\n      if (this.binded) return\n      on(document, 'mouseup', this.handlerMouseUp)\n      on(document, 'mousemove', this.handlerMove)\n      this.binded = true\n    },\n    //鼠标按下事件\n    handlerMouseDown(event) {\n      //只有鼠标左键可以拖动\n      if(event.button !== 0){\n\n      }\n      //标记开始拖拽滚动条\n      this.startMove = true\n      //记录鼠标起始的位置\n      this.axis = event[this.config.clientAxis]\n      //给document绑定 mouseup与mousemove\n      this.bindEvents()\n    },\n    handlerMouseUp() {\n      //鼠标抬起, 结束拖拽状态\n      this.startMove = false\n    },\n    handlerMove(event) {\n\n      //如果不是在鼠标按下的状态 || 节流控制，在指定时间内只执行一次\n      if (!this.startMove || !this.moveThrottle(Date.now())) return\n\n      event.preventDefault()\n      event.stopImmediatePropagation()\n\n      const parentRect = this.$refs.stripContainer.getBoundingClientRect(),\n            rect = this.$refs.strip.getBoundingClientRect()\n      //相对于滚动条容器的offset\n      const contrastParentOffset = rect[this.config.direction] - parentRect[this.config.direction]\n      /**\n       * offset = 鼠标移动的偏移量 + 滚动条当前的偏移量\n       * offset为滚动条需要移动到的位置\n       * event[this.config.clientAxis] - this.axis = 鼠标移动后与移动前的偏移量\n       */\n      const offset = event[this.config.clientAxis] - this.axis + contrastParentOffset\n      //更新鼠标偏移量的值\n      this.axis = event[this.config.clientAxis]\n\n      this.changeOffset(offset)\n    },\n    //鼠标滚轮滚动事件\n    handlerWheel(event) {\n      const parentRect = this.$refs.stripContainer.getBoundingClientRect(),\n            rect = this.$refs.strip.getBoundingClientRect()\n      //滚动条相对于容器的offset\n      const contrastParentOffset = rect[this.config.direction] - parentRect[this.config.direction]\n      //滚动条最终要设置的偏移量    event[this.config.wheelDelta] => 获取鼠标滚轮的滚动值\n      const offset = contrastParentOffset + event[this.config.wheelDelta]\n\n      this.changeOffset(offset, event)\n    },\n    changeOffset(offset, event) {\n\n      const rect = this.$refs.stripContainer.getBoundingClientRect(),\n            maxOffset = rect[this.config.sizeAttr] - this.length\n\n      //防止滚动条越界\n      if (offset < 0) {\n        offset = 0\n      }\n\n      //防止滚动条越界\n      if (offset > maxOffset) {\n        offset = maxOffset\n      }\n\n      if (event && 0 < offset && offset < maxOffset) {\n        event.preventDefault()\n        event.stopImmediatePropagation()\n      }\n\n      //偏移\n      this.$refs.strip.style.transform = `${this.config.translate}(${offset}px)`\n\n      //告诉scroll.vue 滚动条移动的偏移量\n      this.$emit('input', offset)\n    }\n  },\n  created() {\n    const configs = {\n      //水平的属性配置\n      h: {\n        sizeAttr: 'width',\n        client: 'clientWidth',\n        clientAxis: \"clientX\",\n        translate: 'translateX',\n        direction: 'left',\n        wheelDelta: 'deltaX'\n      },\n      //垂直的属性配置\n      v: {\n        sizeAttr: 'height',         //滚动条的高度\n        client: 'clientHeight',     //滚动条容器的可视高度\n        clientAxis: \"clientY\",      //拖动滚动条时，鼠标移动的Y轴坐标值\n        translate: 'translateY',    //上下移动滚动条的位置\n        direction: 'top',           //滚动条容器的top值, 会与 clientY 发生计算\n        wheelDelta: 'deltaY'        //在滚动条容器中滚动 鼠标滚轮 时， 滚动量的值\n      }\n    }\n\n    //根据方向初始化对应的属性配置\n    this.config = this.horizontal ? configs['h'] : configs['v']\n\n  },\n  destroyed() {\n    off(document, 'mouseup', this.handlerClickUp)\n    off(document, 'mousemove', this.handlerMove)\n  }\n}\n</script>\n","<template>\n  <div class=\"happy-scroll\" :style=\"{ width: width + 'px', height: height + 'px' }\">\n    <div class=\"happy-scroll-container\" ref=\"container\" :style=\"[initSize]\" @scroll.stop=\"onScroll\">\n      <slot ref=\"slotContainer\"></slot>\n    </div>\n    <!-- 竖向垂直滚动条, 如果 percentageY 比例等于1不显示该滚动条 -->\n    <happy-scroll-strip\n      v-show=\"!hideVertical && percentageY < 1\"\n      v-model=\"slideY\"\n      v-bind=\"$attrs\"\n      :throttle=\"throttle\"\n      :percentage=\"percentageY\"\n      :move=\"moveY\">\n    </happy-scroll-strip>\n    <!-- 横向水平滚动条 -->\n    <happy-scroll-strip\n      v-show=\"!hideHorizontal && percentageX < 1\"\n      horizontal\n      v-model=\"slideX\"\n      v-bind=\"$attrs\"\n      :throttle=\"throttle\"\n      :percentage=\"percentageX\"\n      :move=\"moveX\">\n    </happy-scroll-strip>\n  </div>\n</template>\n<script>\nimport { generateThrottle } from './util'\nimport HappyScrollStrip from './strip.vue'\nimport ElementResizeDetectorMaker from \"element-resize-detector\"\nimport './scroll.css'\nexport default {\n  name: 'happy-scroll',\n  inheritAttrs: false,\n  props: {\n    //容器宽度\n    width: {\n      type: Number,\n      default: 300\n    },\n    //容器高度\n    height: {\n      type: Number,\n      default: 280\n    },\n    //设置竖向滚动条的位置\n    scrollTop: {\n      type: [Number, String],\n      default: 0\n    },\n    //设置横向滚动条的位置\n    scrollLeft: {\n      type: [Number, String],\n      default: 0\n    },\n    //是否隐藏竖向滚动条\n    hideVertical: Boolean,\n    //是否隐藏横向滚动条\n    hideHorizontal: Boolean,\n    //鼠标移动的节流函数时间, 表示该时间内鼠标移动的回调保障在该时间内只执行一次\n    throttle: {\n      type: Number,\n      default: 14 //默认14毫秒\n    },\n    //是否开启监控视图大小发生变化\n    resize: Boolean,\n    //(当resize=true时生效)当视图宽高变小时(内容减少) 滚动条移动到 -> start(竖向时表示最上边，横向时表示最左边)、end、默认保持不变\n    smallerMove: {\n      type: String,\n      default: ''\n    },\n    //(当resize=true时生效)当视图宽高变大时(内容增多)\n    biggerMove: {\n      type: String,\n      default: ''\n    },\n  },\n  data() {\n    return {\n      //横向滚动条百分比\n      percentageX: 0,\n      moveX: 0, //slot dom元素滚动的位置\n      slideX: 0, //鼠标拖动滚动条的位置\n      //竖向滚动条百分比\n      percentageY: 0,\n      moveY: +this.scrollTop,\n      slideY: +this.scrollLeft,\n      //监听scroll事件的节流函数\n      scrollThrottle: generateThrottle()\n    }\n  },\n  computed: {\n    initSize () {\n      // 15 为浏览器自动滚动条的大小\n      return { width: this.width + (15) + 'px', height: this.height + (!this.hideVertical && this.percentageX < 1 ? 15 : 0) + 'px' }\n    }\n  },\n  watch: {\n    //鼠标拖动滚动条时，移动slot元素到对应位置\n    slideX() {\n      this.$refs.container.scrollLeft = this.slideX / this.percentageX\n    },\n    slideY() {\n      this.$refs.container.scrollTop = this.slideY / this.percentageY\n    },\n    scrollTop () {\n      this.moveY = +this.scrollTop\n    },\n    scrollLeft () {\n      this.moveX = +this.scrollLeft\n    }\n  },\n  methods: {\n    //监听dom元素的滚动事件，通知strip，将bar移动到对应位置\n    onScroll (e) {\n      //节流\n      if(!this.scrollThrottle(Date.now())) return\n      this.moveY = this.$refs.container.scrollTop\n      this.moveX = this.$refs.container.scrollLeft\n    },\n    //获取滚动条百分比\n    getPercentage () {\n      //竖向滚动条高度与容器高度百分比\n      this.percentageY = (this.$refs.container.clientHeight) / this.$refs.container.scrollHeight\n      //横向滚动条高度与容器高度百分比\n      this.percentageX = this.$refs.container.clientWidth / this.$refs.container.scrollWidth\n    },\n    //slot视图大小变化时的监听\n    resizeListener () {\n      //没开启监听reszie方法\n      if(!this.resize) return\n\n      //监听slot视图元素resize\n      let elementResizeDetector = ElementResizeDetectorMaker({\n        strategy: \"scroll\",\n        callOnAdd: false\n      });\n\n      //记录视图上次宽高的变化\n      let lastHeight = 0, lastWidth = 0\n\n      elementResizeDetector.listenTo(this.$slots.default[0]['elm'], (element) => {\n        //初始化百分比\n        this.getPercentage()\n\n        //获取竖向滚动条变小或者变大的移动策略\n        let moveTo\n        if(element.clientHeight < lastHeight){\n          moveTo = this.smallerMove.toLocaleLowerCase()\n        }\n        if(element.clientHeight > lastHeight){\n          moveTo = this.biggerMove.toLocaleLowerCase()\n        }\n\n        if(moveTo === 'start'){\n          //竖向滚动条移动到顶部\n          this.slideY = this.moveY = 0\n        }\n        if(moveTo === 'end'){\n          //竖向滚动条移动到底部\n          this.slideY = this.moveY = element.clientHeight\n        }\n\n        lastHeight = element.clientHeight\n\n        //获取横向向滚动条变小或者变大的移动策略\n        moveTo = ''\n        if(element.clientWidth < lastWidth){\n          moveTo = this.smallerMove.toLocaleLowerCase()\n        }\n        if(element.clientWidth > lastWidth){\n          moveTo = this.biggerMove.toLocaleLowerCase()\n        }\n\n        if(moveTo === 'start'){\n          //竖向滚动条移动到顶部\n          this.slideX = this.moveX = 0\n        }\n        if(moveTo === 'end'){\n          //竖向滚动条移动到底部\n          this.slideX = this.moveX = element.clientHeight\n        }\n\n        lastWidth = element.clientWidth\n      });\n    }\n  },\n  components: {\n    HappyScrollStrip\n  },\n  mounted() {\n    //初始化百分比\n    this.getPercentage()\n    //监听slot视图变化, 方法内部会判断是否设置了开启监听resize\n    this.resizeListener()\n  }\n}\n</script>\n","import HappyScroll from './scroll.vue'\nimport { version } from '../package.json'\n\n\n//如果vue是全局变量,使用自动全局安装。\nif (typeof window !== 'undefined' && window.Vue) {\n  Vue.component('happy-scroll', HappyScroll)\n}\n\nexport default {\n  install (Vue) {\n    Vue.component('happy-scroll', HappyScroll)\n  },\n  version\n}\n\nexport {\n  HappyScroll,\n  version\n}\n"],"names":["on","dom","eventType","callback","document","addEventListener","attachEvent","off","removeEventListener","detachEvent","generateThrottle","throttleTime","time","Date","now","render","name","props","horizontal","Boolean","left","top","percentage","type","Number","required","move","default","size","String","color","throttle","[object Object]","config","startMove","binded","length","moveThrottle","this","computed","container","$refs","stripContainer","number","client","sizeAttr","offset","maxOffset","getBoundingClientRect","transform","translate","bottom","right","methods","handlerMouseUp","handlerMove","event","axis","clientAxis","bindEvents","preventDefault","stopImmediatePropagation","parentRect","contrastParentOffset","strip","direction","changeOffset","wheelDelta","style","$emit","configs","h","v","handlerClickUp","inheritAttrs","width","height","scrollTop","scrollLeft","hideVertical","hideHorizontal","resize","smallerMove","biggerMove","percentageX","moveX","slideX","percentageY","moveY","slideY","scrollThrottle","watch","e","scrollHeight","clientWidth","scrollWidth","lastHeight","lastWidth","ElementResizeDetectorMaker","strategy","callOnAdd","listenTo","$slots","element","getPercentage","moveTo","clientHeight","toLocaleLowerCase","components","HappyScrollStrip","resizeListener","window","Vue","component","HappyScroll","version"],"mappings":"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"}