{"version":3,"file":"happy-scroll.min.js","sources":["../src/util.js","../src/strip.vue","../src/scroll.vue","../src/index.js"],"sourcesContent":["/**\n * 绑定事件\n *\n * @export\n * @param {any} dom\n * @param {any} eventType\n * @param {any} callback\n */\nexport function on(dom, eventType, callback){\n  if(document.addEventListener){\n      dom.addEventListener(eventType, callback);\n  }else{\n      dom.attachEvent('on' + eventType, callback);\n  }\n}\n\n/**\n* 解绑事件\n*\n* @export\n* @param {any} dom\n* @param {any} eventType\n* @param {any} callback\n*/\nexport function off(dom, eventType, callback){\n  if(document.addEventListener){\n      dom.removeEventListener(eventType, callback);\n  }else{\n      dom.detachEvent('on' + eventType, callback);\n  }\n}\n/**\n* 节流函数\n*\n* @export\n* @param {any} that\n* @param {any} fn\n*/\nexport function throttle(that, fn){\n  fn.fnThrottle && clearTimeout(fn.fnThrottle);\n  const args = [].slice.call(arguments, 2);\n  fn.fnThrottle = setTimeout(function () {\n      fn.apply(that, args);\n  }, 200);\n}\n","<template>\n  <div class=\"happy-scroll-strip\" ref=\"stripContainer\" :class=\"[horizontal ? 'happy-scroll-strip--horizontal' : 'happy-scroll-strip--vertical']\" @wheel.capture.stop=\"handlerWheel\">\n    <div ref=\"strip\" class=\"scrollBar\" :style=\"[translate, initStrip]\" @mousedown.stop=\"handlerMouseDown\"></div>\n  </div>\n</template>\n<script>\nimport { on, off } from './util';\n// import './scroll.css';\nexport default {\n  name: 'happy-scroll-strip',\n  props: {\n    horizontal: Boolean,\n    percentage: {\n      type: Number,\n      required: true\n    },\n    move: {\n      type: Number,\n      default: 0\n    }\n  },\n  data() {\n    return {\n      config: {},\n      //标记鼠标按下后开始移动的状态. 鼠标按下为true 抬起为 false\n      startMove: false,\n      //为document绑定事件, 此状态值为了避免重复绑定\n      binded: false,\n      //滚动条的宽或者高\n      size: 0\n    }\n  },\n  computed: {\n    /**\n     * 初始化滚动条的高度或者宽度, 这个方法会被执行两次。\n     */\n    initStrip() {\n      const container = this.$refs.stripContainer, //滚动条的容器\n        strip = this.$refs.strip;   //滚动条本身\n\n      if (!this.percentage && !container) {\n        return;\n      }\n      //滚动条的高度或宽度 = 滚动条容器(100%高) * 百分比(外层内容与容器的比例)\n      const number = container[this.config.client] * this.percentage;\n      this.size = number;\n      //根据 水平还是垂直方向 决定初始化滚动条的 宽还是高\n      return {\n        [this.config.sizeAttr]: `${number}px`\n      }\n    },\n    /**\n     * 变化滚动条的位置，scroll主体内容，滚动时，滚动条跟着联动\n     */\n    translate() {\n      return {\n        transform: `${this.config.translate}(${this.move * this.percentage}px)`\n      }\n    }\n  },\n  methods: {\n    //鼠标按下事件\n    handlerMouseDown(event) {\n      //标记开始拖拽滚动条\n      this.startMove = true;\n      //记录鼠标起始的位置\n      this.axis = event[this.config.clientAxis];\n      //给document绑定 mouseup与mousemove\n      this.bindEvents();\n    },\n    bindEvents() {\n      //已绑定过了 不再重复绑定\n      if (this.binded) return;\n\n      on(document, 'mouseup', this.handlerMouseUp);\n      on(document, 'mousemove', this.handlerMove);\n      this.binded = true;\n    },\n    handlerMouseUp() {\n      //鼠标抬起, 结束拖拽状态\n      this.startMove = false;\n    },\n    handlerMove(event) {\n      //如果不是在鼠标按下的状态\n      if (!this.startMove) return;\n\n      event.preventDefault();\n      event.stopImmediatePropagation();\n\n      const parentRect = this.$refs.stripContainer.getBoundingClientRect(),\n        rect = this.$refs.strip.getBoundingClientRect();\n      //相对于滚动条容器的offset\n      const contrastParentOffset = rect[this.config.direction] - parentRect[this.config.direction];\n      /**\n       * offset = 鼠标移动的偏移量 + 滚动条当前的偏移量\n       * offset为滚动条需要移动到的位置\n       * event[this.config.clientAxis] - this.axis = 鼠标移动后与移动前的偏移量\n       */\n      const offset = event[this.config.clientAxis] - this.axis + contrastParentOffset;\n      //更新鼠标偏移量的值\n      this.axis = event[this.config.clientAxis];\n\n      this.changeOffset(offset);\n    },\n    //鼠标滚轮滚动事件\n    handlerWheel(event) {\n      const parentRect = this.$refs.stripContainer.getBoundingClientRect(),\n        rect = this.$refs.strip.getBoundingClientRect();\n      //滚动条相对于容器的offset\n      const contrastParentOffset = rect[this.config.direction] - parentRect[this.config.direction];\n      //滚动条最终要设置的偏移量    event[this.config.wheelDelta] => 获取鼠标滚轮的滚动值\n      const offset = contrastParentOffset + event[this.config.wheelDelta];\n\n      this.changeOffset(offset, event);\n    },\n    changeOffset(offset, event) {\n\n      const rect = this.$refs.stripContainer.getBoundingClientRect(),\n        maxOffset = rect[this.config.sizeAttr] - this.size;\n\n      //防止滚动条越界\n      if (offset < 0) {\n        offset = 0;\n      }\n\n      //防止滚动条越界\n      if (offset > maxOffset) {\n        offset = maxOffset;\n      }\n\n      if (event && 0 < offset && offset < maxOffset) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n      }\n\n      //偏移\n      this.$refs.strip.style.transform = `${this.config.translate}(${offset}px)`;\n\n      //告诉scroll.vue 滚动条移动的偏移量\n      this.$emit('input', offset);\n    }\n  },\n  created() {\n    const configs = {\n      //水平的属性配置\n      h: {\n        sizeAttr: 'width',\n        client: 'clientWidth',\n        clientAxis: \"clientX\",\n        translate: 'translateX',\n        direction: 'left',\n        wheelDelta: 'deltaX'\n      },\n      //垂直的属性配置\n      v: {\n        sizeAttr: 'height',         //滚动条的高度\n        client: 'clientHeight',     //滚动条容器的可视高度\n        clientAxis: \"clientY\",      //拖动滚动条时，鼠标移动的Y轴坐标值\n        translate: 'translateY',    //上下移动滚动条的位置\n        direction: 'top',           //滚动条容器的top值, 会与 clientY 发生计算\n        wheelDelta: 'deltaY'        //在滚动条容器中滚动 鼠标滚轮 时， 滚动量的值\n      }\n    }\n\n    //根据方向初始化对应的属性配置\n    this.config = this.horizontal ? configs['h'] : configs['v'];\n\n  },\n  destroyed() {\n    off(document, 'mouseup', this.handlerClickUp);\n    off(document, 'mousemove', this.handlerMove);\n  }\n}\n</script>\n","<template>\n  <div class=\"happy-scroll\" :style=\"{ width: width + 'px', height: height + 'px' }\">\n    <div class=\"happy-scroll-container\" ref=\"container\" :style=\"{ width: width + 15 + 'px', height: height + 15 + 'px' }\" @scroll.stop=\"onScroll\">\n      <slot></slot>\n    </div>\n    <!-- 竖向垂直滚动条 -->\n    <happy-scroll-strip v-model=\"slideY\" :percentage=\"percentageY\" :move=\"moveY\"></happy-scroll-strip>\n    <!-- 横向水平滚动条 -->\n    <happy-scroll-strip v-model=\"slideX\" horizontal :percentage=\"percentageX\" :move=\"moveX\"></happy-scroll-strip>\n  </div>\n</template>\n<script>\nimport HappyScrollStrip from './strip.vue';\n// import './scroll.css';\nexport default {\n  name: 'happy-scroll',\n  props: {\n    width: {\n      type: Number,\n      default: 300\n    },\n    height: {\n      type: Number,\n      default: 280\n    }\n  },\n  data() {\n    return {\n      percentageX: 0,\n      moveX: 0,\n      slideX: 0,\n      percentageY: 0,\n      moveY: 0,\n      slideY: 0\n    }\n  },\n  watch: {\n    slideX() {\n      this.$refs.container.scrollLeft = this.slideX / this.percentageX;\n    },\n    slideY() {\n      this.$refs.container.scrollTop = this.slideY / this.percentageY;\n    }\n  },\n  methods: {\n    onScroll(e) {\n      this.moveY = this.$refs.container.scrollTop;\n      this.moveX = this.$refs.container.scrollLeft;\n    }\n  },\n  components: {\n    HappyScrollStrip\n  },\n  mounted() {\n    this.percentageY = this.$refs.container.clientHeight / this.$refs.container.scrollHeight;\n    this.percentageX = this.$refs.container.clientWidth / this.$refs.container.scrollWidth;\n  }\n}\n</script>\n","import HappyScroll from './scroll.vue'\n\n\n//如果vue是全局变量,使用自动全局安装。\nif (typeof window !== 'undefined' && window.Vue) {\n  Vue.component('happy-scroll', HappyScroll)\n}\n\nexport default {\n  install (Vue) {\n    Vue.component('happy-scroll', HappyScroll)\n  }\n}\n\nexport {\n  HappyScroll\n}\n"],"names":["on","dom","eventType","callback","document","addEventListener","attachEvent","off","removeEventListener","detachEvent","render","name","props","horizontal","Boolean","percentage","type","Number","required","move","default","data","config","startMove","binded","size","computed","[object Object]","container","this","$refs","stripContainer","number","client","sizeAttr","transform","translate","methods","event","axis","clientAxis","bindEvents","handlerMouseUp","handlerMove","preventDefault","stopImmediatePropagation","parentRect","getBoundingClientRect","contrastParentOffset","strip","direction","offset","changeOffset","wheelDelta","maxOffset","style","$emit","configs","h","v","handlerClickUp","width","height","percentageX","moveX","slideX","percentageY","moveY","slideY","watch","scrollLeft","scrollTop","e","components","HappyScrollStrip","clientHeight","scrollHeight","clientWidth","scrollWidth","window","Vue","component","HappyScroll"],"mappings":"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"}